<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
 [김종범]
 게시판(Board) 관련 SQL 쿼리 매퍼 XML 파일
 - Oracle의 시퀀스/트리거 방식과 호환성을 위해 <selectKey>를 사용하여 PK를 조회합니다.
-->
<mapper namespace="com.gym.mapper.xml.BoardQueryMapper">

    <resultMap id="boardResultMap" type="com.gym.domain.board.Board">
        <id property="boardId" column="board_id"/>
        <result property="boardTitle" column="board_title"/>
        <result property="boardContent" column="board_content"/>
        <result property="boardUse" column="board_use"/>
        <result property="boardRegDate" column="board_reg_date"/>
        <result property="boardModDate" column="board_mod_date"/>
        <result property="memberId" column="member_id"/>
        <result property="boardNum" column="board_num"/>
    </resultMap>

    <!-- [김종범] 게시판 정보를 DB에 삽입하는 쿼리 -->
    <!-- ✅ [수정] useGeneratedKeys를 제거하고 <selectKey>를 추가 -->
    <insert id="insertBoard" parameterType="com.gym.domain.board.Board">
        <!-- 
            [김종범]
            <selectKey> 설명:
            - order="AFTER": INSERT 문이 실행된 후에 이 쿼리를 실행합니다.
            - keyProperty="boardId": 조회 결과를 파라미터로 받은 Board 객체의 'boardId' 필드에 저장합니다.
            - resultType="int": 조회 결과의 타입은 정수입니다.
            - 쿼리 내용: 'seq_board_id.CURRVAL'은 현재 DB 세션에서 마지막으로 생성된 시퀀스 값을 가져옵니다.
        -->
        <selectKey keyProperty="boardId" resultType="int" order="AFTER">
            SELECT seq_board_id.CURRVAL FROM DUAL
        </selectKey>
        
        <!-- board_tbl에 새로운 게시판 정보를 추가합니다. -->
        INSERT INTO board_tbl (
            board_id,
            board_title,
            board_content,
            board_use,
            member_id,
            board_num
        ) VALUES (
            seq_board_id.NEXTVAL,
            #{boardTitle},
            #{boardContent},
            #{boardUse, jdbcType=CHAR},
            #{memberId},
            #{boardNum, jdbcType=CHAR}
        )
    </insert>

    <!-- [삭제] 단건 조회는 더 이상 사용하지 않음 -->
    <select id="findBoardById" parameterType="int" resultMap="boardResultMap">
        SELECT
            board_id,
            board_title,
            board_content,
            board_use,
            board_reg_date,
            board_mod_date,
            member_id,
            board_num
        FROM
            board_tbl
        WHERE
            board_id = #{boardId}
    </select>

    <!-- [김종범] 모든 게시판 목록을 조회하는 쿼리 (유지) -->
    <select id="findAllBoards" resultMap="boardResultMap">
        SELECT
            board_id,
            board_title,
            board_content,
            board_use,
            board_reg_date,
            board_mod_date,
            member_id,
            board_num
        FROM
            board_tbl
        ORDER BY
            board_num ASC, board_id ASC
    </select>

    <!-- [추가] 필터형 목록 조회: boardId(정합 시 단건과 동일), boardTitle(부분일치), memberId(정확일치)
         - 파라미터 미입력 시 WHERE 절이 생기지 않아 전체 목록 반환
         - 컨트롤러/서비스에서 Map 전달 또는 개별 파라미터로 호출 가능 -->
    <select id="searchBoards" parameterType="map" resultMap="boardResultMap">
        SELECT
            board_id,
            board_title,
            board_content,
            board_use,
            board_reg_date,
            board_mod_date,
            member_id,
            board_num
        FROM
            board_tbl
        <where>
            <if test="boardId != null and boardId != ''">
                AND board_id = #{boardId}
            </if>
            <if test="boardTitle != null and boardTitle != ''">
                AND board_title LIKE '%' || #{boardTitle} || '%'
            </if>
            <if test="memberId != null and memberId != ''">
                AND member_id = #{memberId}
            </if>
        </where>
        ORDER BY
            board_num ASC, board_id ASC
    </select>
    
    <!-- [김종범] 게시판 정보를 수정하는 동적 쿼리 (유지) -->
    <update id="updateBoard" parameterType="com.gym.domain.board.Board">
        UPDATE board_tbl
        <set>
            <if test="boardTitle != null and boardTitle != ''">
                board_title = #{boardTitle},
            </if>
            <if test="boardContent != null and boardContent != ''">
                board_content = #{boardContent},
            </if>
            <if test="boardUse != null and boardUse != ''">
                board_use = #{boardUse, jdbcType=CHAR},
            </if>
            <if test="memberId != null and memberId != ''">
                member_id = #{memberId},
            </if>
            <if test="boardNum != null">
                board_num = #{boardNum, jdbcType=CHAR},
            </if>
            board_mod_date = SYSDATE
        </set>
        WHERE board_id = #{boardId}
        AND   member_id = #{memberId}  <!-- [250922] 수정 후 회원ID값 유지 -->
    </update>

    <!-- [김종범] boardId로 특정 게시판을 삭제하는 쿼리 (유지) -->
    <delete id="deleteBoardById" parameterType="int">
        DELETE FROM
            board_tbl
        WHERE
            board_id = #{boardId}
    </delete>

</mapper>
